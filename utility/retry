#!/bin/bash
#
# Retries a command.
#
# The retry count is given by ATTEMPTS (default 5), the initial
# backoff timeout is given by TIMEOUT in seconds (default 1.)
#
# Successive backoffs double the timeout.
#
# Beware of set -e killing your whole script!

function retry_execution {
  local n=3;       # retry 3 times by default
  local naptime=0; # don't sleep by default

  # parsing command line options

  while true; do
    case "$1" in

      -t|--times)
        shift   # drop --times from the args
        n="$1"  # $1 contains the number of iterations
        shift
        ;;

      -n|--naptime)
        shift   # drop --naptime from the args
        n="$1"  # $1 contains the naptime
        shift
        ;;

      *)
        break;  # no more args to parse

    esac
  done

  # executing command

  local cmd="$@";

  for i in $(seq 1 $n); do
    eval "$cmd";

    if [[ $? == 0 ]]; then
      exit 0; # command executed succesfully
    else
      echo "Execution Failed with exit status $?. Retrying [$i/$n]." >&2
    fi
  done

  exit $?; # exit with the same exit status as the invoked command
}

retry_execution $@
